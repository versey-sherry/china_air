air_pm25 <- air_data[air_data$type == "PM2.5",]
melt(air_pm25,id="PM2.5")
library(reshape)
melt(air_pm25,id="PM2.5")
t(air_pm25)
tran <- t(air_pm25)
View(tran)
air_
View(air_pm25)
?colMeans
row_mean <- rowMeans(air_pm25)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
colSums(x)
air_pm25[2,4]
air_pm25[2,]
x <- air_pm25[2,]
x
View(x)
x <- air_pm25[,c(3,ncol(air_pm25)]
x <- air_pm25[,3:ncol(air_pm25]
x <- air_pm25[,3:ncol(air_pm25)]
View(x)
test <- colMeans(air_pm25[,4:ncol(air_pm25)])
View(test)
test <- colMeans(air_pm25[,4:ncol(air_pm25)])
test
class(test)
View(air_data)
View(air_pm25)
ncol(air_pm25)
test1 <- c(air_pm25$date[1],test)
test1 <- data.frame(c(air_pm25$date[1],test))
View(test1)
test1 <- as.data.frame(c(air_pm25$date[1],test))
View(test1)
test1 <-c(air_pm25$date[1],test)
test1
test1[1]
names(test1[1]) <- "date"
test1[1]
data.frame <- air_pm25[1,]
data_frame <- air_pm25[1]
data_frame <- t(as.data.frame(test))
View(data_frame)
data_frame <- t(as.data.frame(test))
data_frame <- t(data.frame(test))
View(data_frame)
library(reshape)
setwd("/Users/sherryinverse/Desktop/airinfo")
file_name <- list.files("/Users/sherryinverse/Desktop/airinfo",pattern = '*.csv')
air_data <- read.csv(file_name[1],stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
test <- colMeans(air_pm25[,4:ncol(air_pm25)])
data_frame <- t(data.frame(test))
air_data <- read.csv(file_name[2],stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
air_pm25 <- air_data[air_data$type == "PM2.5",]
test <- colMeans(air_pm25[,4:ncol(air_pm25)])
test1 <-c(air_pm25$date[2],test)
data_frame <- cbind(data_frame,test1)
test <- c("20160101",test)
data_frame <- t(data.frame(test))
data_frame <- t(data.frame(test))
air_data <- read.csv(file_name[2],stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
test <- colMeans(air_pm25[,4:ncol(air_pm25)])
test1 <-c(air_pm25$date[2],test)
data_frame <- cbind(data_frame,test1)
data_frame <- cbind(data_frame,t(data.frame(test1)
data_frame <- cbind(data_frame,t(data.frame(test1))
data_frame <- cbind(data_frame,t(data.frame(test1)))
View(data_frame)
file_name <- list.files("/Users/sherryinverse/Desktop/airinfo",pattern = '*.csv')
air_data <- read.csv(file_name[1],stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
test <- colMeans(air_pm25[,4:ncol(air_pm25)])
test <- c("20160101",test)
data_frame <- t(data.frame(test))
air_data <- read.csv(file_name[2],stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
test <- colMeans(air_pm25[,4:ncol(air_pm25)])
test1 <-c(air_pm25$date[2],test)
data_frame <- rbind(data_frame,t(data.frame(test1)))
View(data_frame)
a = 1
file_name <- list.files("/Users/sherryinverse/Desktop/airinfo",pattern = '*.csv')
air_data <- read.csv(file_name[a], stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5"]
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
mean(air_pm25$X1014A)
View(air_pm25)
test <- pm25_average
air_data <- read.csv(file_name[a], stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5"]
View(air_pm25)
View(air_data)
air_data <- read.csv(file_name[a], stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
head(pm25_average)
mean(air_pm25$X1001A)
?as.POSIXct
?as.POSIXct.date
?as.POSIXct
as.POSIXct(air_pm25$date[1],format = "%y%m%d")
air_pm25$date
air_pm25$date[1]
as.POSIXct(as.numeric(air_pm25$date[1]),format = "%y%m%d")
as.POSIXct(as.character(air_pm25$date[1]),format = "%y%m%d")
as.character(air_pm25$date[1])
as.POSIXct.Date(as.character(air_pm25$date[1]),format = "%y%m%d")
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
names(pm25_average) <- "date"
head(pm25_average)
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
head(pm25_average)
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
head(pm25_average)
names(pm25_average[1]) <- "date"
head(pm25_average)
colnames(pm25_average[1])
colnames(pm25_average[1]) <- "date"
colnames(pm25_average)
names(pm25_average) <- "date"
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
date_average <- rbind(date_average,pm25_average)
date_average <- data.frame(pm25_average)
View(date_average)
date_average <- t(data.frame(pm25_average))
View(date_average)
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
date_average <- t(data.frame(pm25_average))
View(date_average)
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
date_average <- t(data.frame(pm25_average))
View(date_average)
a = 2
for (a in 2:5) {
air_data <- read.csv(file_name[a], stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
date_average <- rbind(date_average,pm25_average)
}
View(date_average)
library(gstat)
file_name <- list.files("/Users/sherryinverse/Desktop/airinfo",pattern = '*.csv')
air_data <- read.csv(file_name[1], stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
date_average <- t(data.frame(pm25_average))
a = 2
for (a in 2:length(file_name)) {
air_data <- read.csv(file_name[a], stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
date_average <- rbind(date_average,pm25_average)
}
View(date_average)
warnings()
station <- read.csv("/Users/sherryinverse/Desktop/airinfo/station/station1.csv")
station1 <- read.csv("/Users/sherryinverse/Desktop/airinfo/station/station1.csv")
station1 <- read.csv("/Users/sherryinverse/Desktop/airinfo/station/station1.csv")
station2 <- read.csv("/Users/sherryinverse/Desktop/airinfo/station/station2.csv")
station3 <- read.csv("/Users/sherryinverse/Desktop/airinfo/station/station3.csv")
View(station1)
View(station1)
View(station2)
names(station1)
names(staiton2)
names(station2)
names(station3)
station <- rbind(station1,station2,station3)
names(station) <- c("id","name","city","lat","lon")
unique_station <- station[unique(station$id),]
?merge
names(station1) <- c("id","name","city","lat","lon")
test <- merge(unique_station,station1,by.x = "id", by.y = "id")
View(test)
unique_station = station1
unique_station <- station[unique(station$id),]
unique_station == station1
station <- read.csv("/Users/sherryinverse/Desktop/airinfo/station/station1.csv")
station <- read.csv("/Users/sherryinverse/Desktop/airinfo/station/station1.csv")
names(station) <- c("id","name","city","lat","lon")
china_map <- shapefile("/Users/sherryinverse/Desktop/winter_inspection/boundaries/ChinaOfficialADM.shp")
library(sp)
china_map <- shapefile("/Users/sherryinverse/Desktop/winter_inspection/boundaries/ChinaOfficialADM.shp")
??shapefile
library(raster)
china_map <- shapefile("/Users/sherryinverse/Desktop/winter_inspection/boundaries/ChinaOfficialADM.shp")
plot(china_map)
points(station$lat,station$lon,cex.main = 1)
plot(china_map)
points(station$lat,station$lon,pch = 19, cex.main = 0.5)
plot(china_map)
points(station$lat,station$lon,pch = 19, cex.main = 0.1)
plot(china_map)
points(station$lat,station$lon,pch = 19, cex.main = 0.1)
plot(china_map)
points(station$lat,station$lon,pch = 19, cex.main = 0.01)
plot(china_map)
points(station$lat,station$lon,pch = 19, cex.main = 0.01)
dev.copy(jpeg, filename = "station_map.jpg")
dev.off()
x <- data.frame(k1 = c(NA,NA,3,4,5), k2 = c(1,NA,NA,4,5), data = 1:5)
y <- data.frame(k1 = c(NA,2,NA,4,5), k2 = c(NA,NA,3,4,5), data = 1:5)
merge(x, y, by = c("k1","k2"))
x
y
write.csv(date_average,"date_average.csv")
head(station)
head(date_average)
paste('X',station$id[1])
test <- paste('X',station$id[1])
test
test <- paste('X',station$id[1],sep = '')
test
test <- station
test$id <- paste('X',test$id,sep = '')
head(test)
air_data <- read.csv(file_name[a], stringsAsFactors = FALSE)
air_data <- read.csv(file_name[1], stringsAsFactors = FALSE)
air_pm25 <- air_data[air_data$type == "PM2.5",]
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
pm25_average <- c(as.character(air_pm25$date[1]),pm25_average)
test <- data.frame(pm25_average)
test
View(test)
names(test)
test <- test[2:nrow(test),]
test <- data.frame(pm25_average)
pm25_average <- colMeans(air_pm25[,4:ncol(air_pm25)])
test <- data.frame(pm25_average)
View(test)
name(test) <- air_pm25$date[1]
names(test) <- air_pm25$date[1]
head(tes)
head(test)
test$id <- row.names(test)
head(test)
pollution <- merge(test, station, by.x = "id", by.y = "id", all.x = TRUE, all.y = FALSE)
View(pollution)
head(station)
station$id <- paste('X',station$id, sep = "")
station
pollution <- merge(test, station, by.x = "id", by.y = "id", all.x = TRUE, all.y = FALSE)
View(pollution)
station[station$id =="X1254A"]
View(station)
plot(china_map)
points(pollution$lat,pollution$lon, cex.main = 0.01, col = pollution$`20160101`)
plot(china_map)
points(pollution$lat,pollution$lon, pch = 19, cex.main = 0.01, col = pollution$`20160101`)
plot(china_map)
points(pollution$lat,pollution$lon, pch = 19, cex.main = 0.001, col = pollution$`20160101`)
colRamp <- colorRampPalette(colors=c("white","gray","yellow","red","darkred","purple"))(42)
plot(china_map)
colRamp <- colorRampPalette(colors=c("white","gray","yellow","red","darkred","purple"))(42)
points(pollution$lat,pollution$lon, pch = 19, cex.main = 0.001, col = colorRamp())
points(pollution$lat,pollution$lon, pch = 19, cex.main = 0.001, col = colorRamp)
pollution <- merge(test, station, by.x = "id", by.y = "id", all.x = TRUE, all.y = FALSE)
plot(china_map)
colRamp <- colorRampPalette(colors=c("white","gray","yellow","red","darkred","purple"))(42)
points(pollution$lat,pollution$lon, pch = 19, cex.main = 0.001, col = "lightyellow")
pollution$color[pollution$`20160101`<=50] <- "lightyellow"
View(pollution)
pollution$color[pollution[2]<=50] <- "lightyellow"
pollution$color[pollution[2]< 50 & polllution[2] <= 100] <- "yellow"
pollution$color[pollution[2]< 50 & pollution[2] <= 100] <- "yellow"
pollution$color[pollution[2]<=50] <- "lightyellow"
pollution$color[pollution[2]> 50 & pollution[2] <= 100] <- "yellow"
pollution$color[pollution[2]>150] <- "red"
pollution$color[pollution[2]> 100 & pollution<=150] <-"orange"
pollution$color[pollution[2]<=50] <- "lightyellow"
pollution$color[pollution[2]> 50 & pollution[2] <= 100] <- "yellow"
pollution$color[pollution[2]> 100 & pollution<=150] <-"orange"
pollution$color[pollution$`20160101`<=50] <- "lightyellow"
pollution$color[pollution$`20160101`> 50 & pollution$`20160101` <= 100] <- "yellow"
pollution$color[pollution$`20160101`> 100 & pollution$`20160101`<=150] <-"orange"
pollution$color[pollution$`20160101`>150] <- "red"
points(pollution$lat,pollution$lon, pch = 19, cex.main = 0.001, col = pollution$color)
stem(pollution$`20160101`)
boxplot(pollution$`20160101`)
hist(pollution$`20160101`)
test <- pollution
test$`20160101` <- log10(test$`20160101`)
stem(test$`20160101`)
hist(test$`20160101`)
stem(test$`20160101`)
hist(test$`20160101`)
boxplot(test$`20160101`)
pollution$log <- log10(pollution$`20160101`)
?log
names(pollution)
names(pollution) <- c( "id","pm25","name","city","lat","lon","color","log"  )
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics_c173_c273/soil.txt", header=TRUE)
View(a)
g <- gstat(id = "pm25", formula = log(pm25)~1,locations = ~lat+lon, data = pullution)
g <- gstat(id = "pm25", formula = log(pm25)~1,locations = ~lat+lon, data = pollution)
pollution <- pollution[!is.na(pollution$lat)&!is.na(pollution$lon),]
View(pollution)
pollution <- pollution[!is.na(pollution$lat)&!is.na(pollution$lon)&!is.na(pollution$pm25),]
View(pollution)
g <- gstat(id = "pm25", formula = log(pm25)~1,locations = ~lat+lon, data = pollution)
plot(variogram(g))
v.fit <- fit.variogram(variogram(g),vgm(0.5,"Sph",1000,0.1))
v.fit <- fit.variogram(variogram(g))
v.fit <- fit.variogram(variogram(g),vgm(0,1,0.1))
v.fit <- fit.variogram(variogram(g),vgm(0.5,"sph"1,0.1))
v.fit <- fit.variogram(variogram(g),vgm(0.5,"sph",1,0.1))
gn <- gstat(id = "pm25", formula = pm25~1,locations = ~lat+lon, data = pollution)
plot(variogram(gn))
v.fit <- fit.variogram(variogram(g),vgm(c("Sph","Exp","Mat")))
v.fit
plot(variogram(g),v.fit)
v.fit <- fit.variogram(variogram(g),vgm(c("Sph")))
plot(variogram(g),v.fit)
v.fit <- fit.variogram(variogram(g),vgm(c("Sph","Mat")))
v.fit <- fit.variogram(variogram(g),vgm(c("Sph","Mat","Exp")))
plot(variogram(g),v.fit)
vn.fit <- fit.variogram(variogram(gn),vgm(c("Sph","Exp","Mat")))
plot(variogram(gn),vn.fit)
lat_range <- as.integer(range(pollution$lat))
lon_range <- as.integer(range(pollution$lon))
vn.fit <- fit.variogram(variogram(gn),vgm(c("Sph","Exp","Mat")))
lat_range
lat_range <- range(pollution$lat)
lat_range
class(lat_range[1])
lon_range <- range(pollution$lon)
lon_range
lat_range[2]-lat_range[1]
?seq
grd <- expand.grid(x = seq(from = lat_range[1], to = lat_range[2], by = 0.1),
y = seq(from = lon_range[1], to = lon_range[2], by =0.1))
plot(grd)
View(grd)
plot(china_map)
points(grd$x,grd$y)
head(pollution)
kr_pollution <- krige(id = "log", log(pm25)~1, location = ~lat+lon, model = v.fit, data = pollution,
newdata= grd)
kr_pollution <- krige(id = "log", log(pm25)~1, location = ~x+y, model = v.fit, data = pollution,
newdata= grd)
kr_pollution <- krige(id = "log", log(pm25)~1, locations = ~x+y, model = v.fit, data = pollution,
newdata= grd)
kr_pollution <- krige(id = "log", log(pm25)~1, locations = ~lat+lon, model = v.fit, data = pollution,
newdata= grd)
head(pollution)
grd <- expand.grid(lat = seq(from = lat_range[1], to = lat_range[2], by = 0.1),
lon = seq(from = lon_range[1], to = lon_range[2], by =0.1))
View(grd)
kr_pollution <- krige(id = "log", log(pm25)~1, locations = ~lat+lon, model = v.fit, data = pollution,
newdata= grd)
View(pollution)
grd <- expand.grid(lat = seq(from = lat_range[1], to = lat_range[2], by = 1),
lon = seq(from = lon_range[1], to = lon_range[2], by =1))
kr_pollution <- krige(id = "log", log(pm25)~1, locations = ~lat+lon, model = v.fit, data = pollution,
newdata= grd)
grd <- expand.grid(lat = seq(from = lat_range[1], to = lat_range[2], by = 1),
lon = seq(from = lon_range[1], to = lon_range[2], by =1))
plot(grd)
kr_pollution <- krige(id = "log", log(pm25)~1, locations = ~lat+lon, model = v.fit, data = pollution,
newdata= grd)
View(kr_pollution)
kr_pollution[!is.na(kr_pollution$log.pred)]
grd <- expand.grid(lat = seq(from = lat_range[1], to = lat_range[2], by = 1),
lon = seq(from = lon_range[1], to = lon_range[2], by =1))
grd <- expand.grid(lat = seq(from = lat_range[1], to = lat_range[2], by = 10),
lon = seq(from = lon_range[1], to = lon_range[2], by =10))
kr_pollution <- krige(id = "log", log(pm25)~1, locations = ~lat+lon, model = v.fit, data = pollution,
newdata= grd)
warnings()
kr_pollution <- krige(id = "log", log(pm25)~1, locations = ~lat+lon, data = pollution,
newdata= grd)
View(kr_pollution)
version
install.packages("swirl")
library(swirl)
install_course_zip("/Users/sherryinverse/Desktop/SecRet/14_310x_Intro_to_R.zip", multi = FALSE)
swirl()
install_course_zip("/Users/sherryinverse/Desktop/SecRet/14_310x_Advanced_R.zip", multi = FALSE)
swirl()
print("hello world")
y <- c(c(pi, 204,3),332, c(pi,205,4))
length(y)
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.13)
z <- c(1.1,9,3.14)
?C
?c
z
c(z,555,z)
z *2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my div <- z/my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4) +(0,10,100)
c(1,2,3,4) +c(0,10,100)
c(1,2,3,4) +c(0,10,100)
z*2 +100
(z * 2 + 100)
info()
skip()
my_div
y(c(2,3,5),444,c(4,4,5))
y <- (c(2,3,5),444,c(4,4,5))
y <- c(2,3,5),444,c(4,4,5))
y <- c((2,3,5),444,c(4,4,5))
y <- c(c(2,3,5),444,c(4,4,5))
lentgh(u)
length(u)
length(y)
class(y)
swirl
swril()
swirl()
1:20
pi:10
15:1
:
?:
?`@`
?`:`
seq(1,20)
seq(0,10, by = 0.5)
seq(5,10, length= 3-)
seq(5,10, length= 30)
my_seq <- seq(5,10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times =40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect <1
tf
num_vect >= 6
my_char c("My","name","is")
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Sherry")
my_name <- c(my_char,"Sherry")
my_name
paste(my_name, collapse = " ")
paste("Hello","world",sep = " ")
paste("Hello","world!",sep = " ")
paste("X","Y",Z,sep="")
paste("X","Y","Z",sep="")
paste(1:3,"X","Y","Z",sep="")
paste(c(1:3),"X","Y","Z",sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS,1:4,sep"-")
paste(LETTERS,1:4,sep = "-")
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
y
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_data
?read.dta
install.packages("foreign")
0
info()
bye()
library(foreign)
?read.dta
data <- read.dta("Users/sherryinverse/Download/cgss2013.dta")
data <- read.dta("Users/sherryinverse/Downloads/cgss2013.dta")
getwd()
data <- read.dta("Users/sherryinverse/Desktop/cgss2013.dta")
setwd("Users/sherryinverse/Desktop)
setwd("Users/sherryinverse/Desktop')
setwd("Users/sherryinverse/Desktop")
data <- read.dta("/Users/sherryinverse/Desktop/cgss2013.dta")
data <- read.dta("/Users/sherryinverse/Desktop/cgss2013.dta", warn.missing.labels = F)
data <- read.dta("/Users/sherryinverse/Desktop/cgss2013.dta", warn.missing.labels = F)[1:9]
data <- read.dta("/Users/sherryinverse/Desktop/cgss2013.dta", warn.missing.labels = F, convert.factors = F)
View(data)
write.csv(data,"data.csv")
swirl()
swirl()
my_data
my_na <- my_data[is.na(my_data)]
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data==NA
sum(my_ba)
sum(my_na)
my_data
0/0
Inf - Inf
